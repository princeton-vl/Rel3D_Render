import numpy as np

# Unity is left-handed while Blender is right-handed
BLENDER_TO_UNITY = np.array([
    [-1, 0, 0, 0],
    [0, 1, 0, 0],
    [0, 0, 1, 0],
    [0, 0, 0, 1]
], dtype=np.float)


# original camera parameters when collecting the synthetic data:
ORIGINAL_CAMERA_INTRINSICS = np.array([
    1.104752000000,0.000000000000,0.000000000000,0.000000000000,
    0.000000000000,1.428148000000,0.000000000000,0.000000000000,
    0.000000000000,0.000000000000,-1.000600000000,-0.600180000000,
    0.000000000000,0.000000000000,-1.000000000000,0.000000000000
], dtype=np.float).reshape(4, 4)

ORIGINAL_CAMERA_EXTRINSICS = np.array([
    1.000000000000,0.000000000000,0.000000000000,0.000000000000,
    0.000000000000,0.916940300000,0.399024400000,-0.979591800000,
    0.000000000000,0.399024400000,-0.916940300000,-6.369968000000,
    0.000000000000,0.000000000000,0.000000000000,1.000000000000
], dtype=np.float).reshape(4, 4)

INTEL_SENSOR_METADATA = {
    "color_intrinsics": {
        "coeffs": [0.0, 0.0, 0.0, 0.0, 0.0],
        "fx": 922.0578002929688,
        "fy": 921.6668701171875,
        "height": 720,
        "model": "distortion.inverse_brown_conrady",
        "ppx": 645.614990234375,
        "ppy": 356.9132385253906,
        "width": 1280},
    "depth_intrinsics": {
        "coeffs": [0.0, 0.0, 0.0, 0.0, 0.0],
        "fx": 938.2817993164062,
        "fy": 938.2817993164062,
        "height": 720,
        "model": "distortion.brown_conrady",
        "ppx": 642.8222045898438,
        "ppy": 346.0678405761719, "width": 1280
    },
    "extrinsics_color_to_depth": {
        "rotation": [0.9999881982803345, -0.0018819705583155155, 0.004475218243896961,
                     0.0018594227731227875, 0.9999855756759644, 0.005037188064306974,
                     -0.004484633449465036, -0.00502880709245801, 0.9999772906303406],
        "translation": [-0.014976206235587597, 0.00019159023941028863, 9.73519854596816e-05]
    }
}
